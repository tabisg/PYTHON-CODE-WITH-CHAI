"""A virtual environment in Python is like a self-contained workspace where you can install and manage Python packages (libraries) independently of the system-wide Python installation.

Think of it as a private sandbox for your project.

Why use a virtual environment?

Dependency management
Different projects may require different versions of the same library. A virtual environment ensures each project has exactly the versions it needs.

Example:

Project A needs Django 3.2

Project B needs Django 5.0
Without virtual environments, this can create conflicts.

Avoid messing up system Python
You donâ€™t pollute your global Python installation with unnecessary packages.

Reproducibility
Makes it easy to share requirements (requirements.txt) so others can recreate the same environment."""
